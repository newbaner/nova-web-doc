import{_ as i,c as a,a2 as n,o as l}from"./chunks/framework.BCQzPhDi.js";const o=JSON.parse('{"title":"部署","description":"","frontmatter":{},"headers":[],"relativePath":"admin/deploy.md","filePath":"admin/deploy.md","lastUpdated":1726653000000}'),p={name:"admin/deploy.md"};function t(h,s,e,k,d,r){return l(),a("div",null,s[0]||(s[0]=[n(`<h1 id="部署" tabindex="-1">部署 <a class="header-anchor" href="#部署" aria-label="Permalink to &quot;部署&quot;">​</a></h1><p>通过 jekins 自动化部署，在构建前，服务器需要准备好<a href="https://plugins.jenkins.io/nodejs/" target="_blank" rel="noreferrer">NodeJS 插件</a>。</p><h2 id="打包" tabindex="-1">打包 <a class="header-anchor" href="#打包" aria-label="Permalink to &quot;打包&quot;">​</a></h2><p>服务器首先会执行<code>/deploy.sh</code>脚本构建项目:</p><div class="vp-code-group vp-adaptive-theme"><div class="tabs"><input type="radio" name="group-XRigo" id="tab--z8CqQ5" checked><label for="tab--z8CqQ5">npm</label><input type="radio" name="group-XRigo" id="tab-Tdo-BuQ"><label for="tab-Tdo-BuQ">pnpm</label></div><div class="blocks"><div class="language-bash vp-adaptive-theme active"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"># 判断 package.json 是否有变动</span></span>
<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">if</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> !</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> npm</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> list</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> --depth=0</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> &gt;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">/dev/null</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> 2&gt;&amp;1</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;"> then</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">echo</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">Some dependencies are missing. Running npm install...</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"># 执行 npm install</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">npm</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> install</span></span>
<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">else</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">echo</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">All dependencies are already installed.</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span></span>
<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">fi</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">npm</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> build</span></span></code></pre></div><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"># 判断 package.json 是否有变动</span></span>
<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">if</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> !</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> pnpm</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> list</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> --depth=0</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> &gt;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">/dev/null</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> 2&gt;&amp;1</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;"> then</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">echo</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">Some dependencies are missing. Running pnpm install...</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"># 执行 pnpm install</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">pnpm</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> install</span></span>
<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">else</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">echo</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">All dependencies are already installed.</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span></span>
<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">fi</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">pnpm</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> build</span></span></code></pre></div></div></div><h2 id="dockerfile-构建镜像" tabindex="-1">Dockerfile 构建镜像 <a class="header-anchor" href="#dockerfile-构建镜像" aria-label="Permalink to &quot;Dockerfile 构建镜像&quot;">​</a></h2><p>然后，会使用根目录下的<code>/Dockerfile</code>构建镜像。</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">FROM</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> nginx:alpine</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">WORKDIR</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> /app</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">COPY</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> dist</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> /app/dist</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">COPY</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> nginx.conf</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> /etc/nginx/conf.d/</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">CMD</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> [</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">nginx</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">,</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">-c</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">,</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">/etc/nginx/conf.d/nginx.conf</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">,</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">-g</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">,</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">daemon off;</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">]</span></span></code></pre></div><h2 id="nginx-前端服务" tabindex="-1">nginx 前端服务 <a class="header-anchor" href="#nginx-前端服务" aria-label="Permalink to &quot;nginx 前端服务&quot;">​</a></h2><p>启动容器后，会根据<code>/nginx.conf</code>配置启动前端服务。</p>`,10)]))}const c=i(p,[["render",t]]);export{o as __pageData,c as default};
